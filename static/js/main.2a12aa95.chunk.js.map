{"version":3,"sources":["drumData.js","DrumPad.js","index.js"],"names":["drumData","id","keyPressed","audioClip","DrumPad","props","_this","this","react_default","a","createElement","className","drum","onClick","handleClick","onKeyDown","handleKeyPress","src","type","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","document","addEventListener","removeEventListener","event","map","key","charCodeAt","includes","keyCode","getElementById","toUpperCase","play","parentElement","classList","add","setTimeout","remove","firstChild","_this2","drumSet","item","src_DrumPad","React","Component","ReactDOM","render","src_App"],"mappings":"mMAgDeA,SAhDE,CACf,CACEC,GAAI,QACJC,WAAY,IACZC,UAAW,0DAEb,CACEF,GAAI,WACJC,WAAY,IACZC,UAAW,8DAEb,CACEF,GAAI,aACJC,WAAY,IACZC,UAAW,0DAEb,CACEF,GAAI,aACJC,WAAY,IACZC,UAAW,iEAEb,CACEF,GAAI,YACJC,WAAY,IACZC,UAAW,gEAEb,CACEF,GAAI,aACJC,WAAY,IACZC,UAAW,2DAEb,CACEF,GAAI,cACJC,WAAY,IACZC,UAAW,0DAEb,CACEF,GAAI,eACJC,WAAY,IACZC,UAAW,mEAEb,CACEF,GAAI,WACJC,WAAY,IACZC,UAAW,6DCrBAC,MArBf,SAAiBC,GAAO,IAAAC,EAAAC,KACpB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,WACVV,GAAIM,KAAKF,MAAMO,KAAKX,GACpBY,QAAS,kBAAMP,EAAKD,MAAMS,YAAYR,EAAKD,MAAMO,KAAKX,MACtDO,EAAAC,EAAAC,cAAA,SACEC,UAAU,OACVV,GAAIM,KAAKF,MAAMO,KAAKV,WACpBa,UAAWR,KAAKF,MAAMW,eACtBC,IAAKV,KAAKF,MAAMO,KAAKT,UACrBe,KAAK,cACLV,EAAAC,EAAAC,cAAA,uDAEDH,KAAKF,MAAMO,KAAKV,cCVrBiB,cACJ,SAAAA,EAAYd,GAAO,IAAAC,EAAA,OAAAc,OAAAC,EAAA,EAAAD,CAAAb,KAAAY,IACjBb,EAAAc,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjB,KAAMF,KACDW,eAAiBV,EAAKU,eAAeS,KAApBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAd,KACtBA,EAAKQ,YAAcR,EAAKQ,YAAYW,KAAjBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAd,KAHFA,mFAMjBqB,SAASC,iBAAiB,UAAWrB,KAAKS,+DAG1CW,SAASE,oBAAoB,UAAWtB,KAAKS,uDAEhCc,GAIb,GAHkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1BC,IAAI,SAAAC,GAAG,OAAIA,EAAIC,eAE9BC,SAASJ,EAAMK,SAAU,CACzC,IAAIjC,EAAayB,SAASS,eAAeN,EAAME,IAAIK,eACnDnC,EAAWoC,OACXpC,EAAWqC,cAAcC,UAAUC,IAAI,cACvCC,WAAW,WAAaxC,EAAWqC,cAAcC,UAAUG,OAAO,eAAgB,0CAG1E1C,GACU0B,SAASS,eAAenC,GAC9B2C,WAAWN,wCAGlB,IAAAO,EAAAtC,KACDuC,EAAU9C,EAAS+B,IAAI,SAAAgB,GAAI,OAAIvC,EAAAC,EAAAC,cAACsC,EAAD,CAAShB,IAAKe,EAAK9C,GAAIW,KAAMmC,EAAMjC,YAAe+B,EAAK/B,gBAE5F,OACEN,EAAAC,EAAAC,cAAA,OAAKT,GAAG,gBACNO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZmC,WAlCOG,IAAMC,WAyCxBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAAS1B,SAASS,eAAe","file":"static/js/main.2a12aa95.chunk.js","sourcesContent":["const drumData = [\n  {\n    id: \"hiHat\",\n    keyPressed: \"Q\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\n  },\n  {\n    id: \"bassKick\",\n    keyPressed: \"W\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n  },\n  {\n    id: \"hiHatStick\",\n    keyPressed: \"E\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\n  },\n  {\n    id: \"punchyKick\",\n    keyPressed: \"A\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\n  },\n  {\n    id: \"sideStick\",\n    keyPressed: \"S\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\n  },\n  {\n    id: \"snareStick\",\n    keyPressed: \"D\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\n  },\n  {\n    id: \"closedHiHat\",\n    keyPressed: \"Z\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n  },\n  {\n    id: \"giveUsALight\",\n    keyPressed: \"X\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\n  },\n  {\n    id: \"hiHatTwo\",\n    keyPressed: \"C\",\n    audioClip: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\n  }\n];\n\nexport default drumData;\n","import React from 'react';\n\nfunction DrumPad(props) {\n    return (\n      <div>\n        <button\n          className=\"drum-pad\"\n          id={this.props.drum.id}\n          onClick={() => this.props.handleClick(this.props.drum.id)} >\n          <audio\n            className=\"clip\"\n            id={this.props.drum.keyPressed}\n            onKeyDown={this.props.handleKeyPress}\n            src={this.props.drum.audioClip}\n            type=\"audio/mpeg\" >\n            <p>Your browser doesn't support HTML5 audio.</p>\n          </audio>\n          {this.props.drum.keyPressed}\n        </button>\n      </div>\n    );\n}\n\nexport default DrumPad;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport drumData from './drumData';\nimport DrumPad from './DrumPad';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress)\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress)\n  }\n  handleKeyPress(event) {\n    const availKeys = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n    const availKeysCodes = availKeys.map(key => key.charCodeAt());\n\n    if(availKeysCodes.includes(event.keyCode)) {\n      let keyPressed = document.getElementById(event.key.toUpperCase());\n      keyPressed.play();\n      keyPressed.parentElement.classList.add(\"keyPressed\");\n      setTimeout(function() { keyPressed.parentElement.classList.remove(\"keyPressed\")}, 200);\n    }\n  }\n  handleClick(id) {\n    let buttonClicked = document.getElementById(id);\n    buttonClicked.firstChild.play();\n  }\n\n  render() {\n    const drumSet = drumData.map(item => <DrumPad key={item.id} drum={item} handleClick = {this.handleClick}/>);\n\n    return (\n      <div id=\"drum-machine\">\n        <div className=\"grid\">\n          {drumSet}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}